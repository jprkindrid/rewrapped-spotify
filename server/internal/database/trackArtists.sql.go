// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: trackArtists.sql

package database

import (
	"context"
	"database/sql"
)

const createPairing = `-- name: CreatePairing :one
INSERT INTO track_artist_pairings (id, created_at, updated_at, track_uri, artist_uri)
VALUES (
   ?1 ,datetime('now'), datetime('now'), ?2, ?3
)
RETURNING id, created_at, updated_at, track_uri, artist_uri
`

type CreatePairingParams struct {
	ID        string
	TrackUri  string
	ArtistUri sql.NullString
}

func (q *Queries) CreatePairing(ctx context.Context, arg CreatePairingParams) (TrackArtistPairing, error) {
	row := q.db.QueryRowContext(ctx, createPairing, arg.ID, arg.TrackUri, arg.ArtistUri)
	var i TrackArtistPairing
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.TrackUri,
		&i.ArtistUri,
	)
	return i, err
}

const getPairingByTrack = `-- name: GetPairingByTrack :one
SELECT id, created_at, updated_at, track_uri, artist_uri FROM track_artist_pairings
WHERE track_uri = ?1
`

func (q *Queries) GetPairingByTrack(ctx context.Context, trackUri string) (TrackArtistPairing, error) {
	row := q.db.QueryRowContext(ctx, getPairingByTrack, trackUri)
	var i TrackArtistPairing
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.TrackUri,
		&i.ArtistUri,
	)
	return i, err
}
